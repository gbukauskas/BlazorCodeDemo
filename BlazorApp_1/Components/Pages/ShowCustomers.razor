@page "/showcustomers/{pagenumber:int?}/{pagesize:int?}/{errormessage?}"
@attribute [StreamRendering(true)]

@using BlazorApp_1.DataContext.Models
@using BlazorApp_1.DataContext.RequestResponse
@using BlazorApp_1.Services
@using BlazorApp_1.Services.Interfaces
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<NorthwindContext> factory

<PageTitle>All Customers</PageTitle>
<h3>All Customers</h3>

@if (currentPage == null || currentPage.Items == null)
{
    <p><em>Loading...</em></p> 
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="align-middle cust-id">Id</th>
                <th class="align-middle cust-name">Company Name</th>
                <th class="align-middle contact-name">Contact Name</th>
                <th class="align-middle contact-title">Contact Title</th>
                <th class="align-middle cust-address">Address</th>
                <th class="align-middle cust-city">City</th>
                <th class="align-middle cust-region">Region</th>
                <th class="cust-postal-code">Postal<br />Code</th>
                <th class="align-middle cust-country">Country</th>
                <th class="align-middle cust-phone">Phone</th>
                <th class="align-middle cust-fax">Fax</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in currentPage.Items)
            {
                <tr @key="@customer" custId="@customer.CustomerId">
                    <td class="cust-id">@customer.CustomerId</td>
                    <td class="cust-name">@customer.CompanyName</td>
                    <td class="contact-name">@customer.ContactName</td>
                    <td class="contact-title">@customer.ContactTitle</td>
                    <td class="cust-address">@customer.Address</td>
                    <td class="cust-city">@customer.City</td>
                    <td class="cust-region">@customer.Region</td>
                    <td class="cust-postal-code">@customer.PostalCode</td>
                    <td class="cust-country">@customer.Country</td>
                    <td class="cust-phone">@customer.Phone</td>
                    <td class="cust-fax">@customer.Fax</td>
                </tr>
            }
        </tbody>
    </table>

    <CustomPager MaxButtons=5 PageCount=@currentPage.TotalPages TotalRecords=@currentPage.TotalRecords.ToString() PageNumber=@currentPage.PageNumber
                 PageSize="@currentPage.PageSize" BaseUrl="showcustomers" ErrorMessage="@ErrorMessage"/>
}


@code {
    /// <summary>
    /// Current page
    /// </summary>
    [Parameter]
    public int? PageNumber { get; set; } = null;

    /// <summary>
    /// Number of rows in the page
    /// </summary>
    [Parameter]
    public int? PageSize { get; set; } = null;

    /// <summary>
    /// Error message
    /// </summary>
    [Parameter]
    public string ErrorMessage { get; set; } = "";

    private int pageNumber;
    private int pageSize;
    private PageResponse<Customer>? currentPage = null;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        pageNumber = PageNumber ?? 1;
        pageSize = PageSize ?? 9;
        var CustomerSvc = new CustomerService();

        using (var context = factory.CreateDbContext())
        {
            var tmp = CustomerSvc.GetAllEntities(context);
            currentPage = await CustomerSvc.GetPageAsync(tmp, pageSize, pageNumber);
        }
        return;
    }
}
